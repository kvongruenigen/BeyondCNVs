install.packages('RTCGAToolbox')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RTCGAToolbox")
library(RTCGAToolbox) # Not available for R version
BiocManager::install("curatedTCGAData")
library(curatedTCGAData) # Not available for R version
head(df)
df <- read_csv("Desktop/Project/temp/intermediate_mapping_file.csv")
head(df)
test_set <- df[1:10]
test_set
test_set$Tumor_Sample_UUID
UUIDtoBarcode("c154a63e-d2e1-4abb-83fe-62a5a5a70b33", from_type = "aliquot_ids")
head(UUIDtoUUID("c154a63e-d2e1-4abb-83fe-62a5a5a70b33", to_type = "file_id"))
?UUIDtoUUID()
barcodeToUUID('TCGA-DD-A4NI-01A-11D-A27I-10')
x <- UUIDtoBarcode("c154a63e-d2e1-4abb-83fe-62a5a5a70b33", from_type = "aliquot_ids")
x$portions.analytes.aliquots.submitter_id[1]
x$portions.analytes.aliquots.submitter_id[1][1:4]
sample_barcode <- x$portions.analytes.aliquots.submitter_id
sample_barcode[1:4]
sample_barcode[1][1:4]
str(sample_barcode[1])[1:4]
sample_barcode <- str(sample_barcode[1])
sample_barcode[1:4]
sample_barcode
sample_barcode <- str(sample_barcode)
sample_barcode
sample_barcode <- x$portions.analytes.aliquots.submitter_id
sample_barcode <- str(sample_barcode)
sample_barcode
sample_barcode <- x$portions.analytes.aliquots.submitter_id
type(sample_barcode)
sample_barcode[1]
# Aliquot Barcode: TCGA-AG-A014-10A-01D-A00M-09
# Sample Barcode: TCGA-AG-A014-10A
substr(sample_barcode,1,16)
barcodeToUUID(TCGA-DD-A4NI-01A)
barcodeToUUID('TCGA-DD-A4NI-01A')
aliquot_ids <- df$Tumor_Sample_UUID
for i in aliquot_ids{
for i in aliquot_ids{
for (i in aliquot_ids){
print(i)
}
barcodes <- ls()
sample_ids <- ls()
barcodes <- list()
sample_ids <- list()
index <- 0
index <- 1
test_set$Tumor_Sample_UUID
test_set <- test_set$Tumor_Sample_UUID
# Aliquot Barcode: TCGA-AG-A014-10A-01D-A00M-09
# Sample Barcode: TCGA-AG-A014-10A
test_set <- df$Tumor_Sample_UUID[1:10]
for (id in test_set){
barcodes[index] <- UUIDtoBarcode(id, from_type = "aliquot_ids")
index + 1
}
for (id in test_set){
barcodes[index] <- UUIDtoBarcode(id, from_type = "aliquot_ids")
index <- index + 1
}
barcodes <- list()
for (id in test_set){
barcodes.append(UUIDtoBarcode(id, from_type = "aliquot_ids"))
}
barcodes <- append(UUIDtoBarcode(id, from_type = "aliquot_ids"))
for (id in test_set){
barcodes <- append(UUIDtoBarcode(id, from_type = "aliquot_ids"))
}
print(id)
for (id in test_set){
print(id)
}
barcodes <- list()
# create the two lists
list1 <- list("a", "b", "c")
list2 <- list()
# iterate through list1 and add each element to list2
for (i in list1) {
list2 <- c(list2, i)
}
# print the contents of list2
print(list2)
for (id in test_set){
barcodes <- c(barccodes, UUIDtoBarcode(id, from_type = "aliquot_ids"))
}
barcodes <- c(barcodes, UUIDtoBarcode(id, from_type = "aliquot_ids"))
for (id in test_set){
barcodes <- c(barcodes, UUIDtoBarcode(id, from_type = "aliquot_ids"))
}
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
barcodes <- list()
for (id in test_set){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
barcodes <- c(barcodes, bar)
}
# Aliquot Barcode: TCGA-AG-A014-10A-01D-A00M-09
# Sample Barcode: TCGA-AG-A014-10A
unique_samples <- unique(df$Tumor_Sample_UUID)
test_set <- unique_samples[1:10]
barcodes <- list()
for (id in test_set){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
barcodes <- c(barcodes, bar)
}
barcodes <- list()
sample_ids <- list()
for (id in test_set){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
sam <- barcodeToUUID(bar)
sample_ids <- c(sample_ids, sam)
barcodes <- c(barcodes, bar)
}
barcodes <- list()
sample_ids <- list()
for (id in test_set){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
sam <- barcodeToUUID(bar)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
barcodes <- c(barcodes, bar)
}
1 = 1
1 == 1
test_df <- df[1:10]
id == test_df$Tumor_Sample_UUID
for (id in test_set){
if (id == test_df$Tumor_Sample_UUID){
test_df$sample_id <- sample_ids[index]
index <- index + 1
}
}
################################################################################
bla <-  c(test_set, sample_ids)
bla
################################################################################
bla <-  c(as.data.frame(test_set), sample_ids)
bla
################################################################################
bla <-  c(list(test_set), sample_ids)
bla
list(test_set)
sample_ids
list(sample_ids)
################################################################################
test_set <- list(test_set)
?list()
test_set <- unique_aliquots[1:10]
unique_aliquots <- unique(df$Tumor_Sample_UUID)
test_set <- unique_aliquots[1:10]
################################################################################
test_set <- as.list(test_set)
bla <-  c(test_set, sample_ids)
bla
?as.data.frame()
bla <-  data.frame(test_set, sample_ids)
bla
test_set <- unique_aliquots[1:10]
################################################################################
test_set <- as.list(test_set)
bla <-  data.frame(test_set, sample_ids)
View(bla)
View(bla)
bla <-  data.frame(unlist(test_set), unlist(sample_ids))
bla
?data.frame()
for (aliquot, id in bla){
print(id)
for (id in bla){
print(id)
}
for (id in bla){
print(id)
}
length(bla)
length(bla$unlist.test_set.)
for (i in range(1, length(bla$unlist.test_set.))){
print(bla$unlist.test_set.[i])
}
range(1, length(bla$unlist.test_set.))
range(1, length(bla$unlist.test_set.),1)
?range
sum(unique_aliquots[1] == df$Tumor_Sample_UUID)
for (i in range(1:length(bla$unlist.test_set.))){
print(bla$unlist.test_set.[i])
}
for (i in range(1:length(bla$unlist.test_set.))){
print(bla$unlist.test_set.[i])
}
range(1:length(bla$unlist.test_set.))
range(1:10)
for (i in 1:length(bla$unlist.test_set.)){
print(bla$unlist.test_set.[i])
}
bla$unlist.test_set. == test_df$Tumor_Sample_UUID
test_df <- df[,1:10]
test_df <- df[,][1:10]
test_df <- df[1:,1:10]
test_df <- df[1,1:10]
test_df <- df[1:10,]
bla$unlist.test_set. == test_df$Tumor_Sample_UUID
test_df <- df[1:100,]
bla$unlist.test_set. == test_df$Tumor_Sample_UUID
if (bla$unlist.test_set. == test_df$Tumor_Sample_UUID){
test_df$sample_id <-  bla$unlist.sample_ids.
}
match(bla$unlist.test_set., test_df$Tumor_Sample_UUID)
bla$unlist.sample_ids.[match(bla$unlist.test_set., test_df$Tumor_Sample_UUID)]
# load the dplyr package
library(dplyr)
# join the two data frames based on matching UUID and aliquot_id
result <- left_join(test_df, bla, by = c("Tumor_Sample_UUID" = "unlist.test_set."))
View(result)
View(result)
# join the two data frames based on matching UUID and aliquot_id
result <- right_join(test_df, bla, by = c("Tumor_Sample_UUID" = "unlist.test_set."))
View(result)
View(result)
# select only the UUID and sample_id columns
result <- result %>% select(UUID, sample_id)
View(result)
View(result)
# select only the UUID and sample_id columns
result <- result %>% select(Tumor_Sample_UUID, sample_id)
# select only the UUID and sample_id columns
result <- result %>% select(Tumor_Sample_UUID, unlist.sample_ids.)
result
# join the two data frames based on matching UUID and aliquot_id
result <- left_join(test_df, bla, by = c("Tumor_Sample_UUID" = "unlist.test_set."))
View(result)
View(result)
colnames(conversion_df) <- c('aliquot_ids', 'sample_ids')
################################################################################
conversion_df <- data.frame(unlist(as.list(test_set)), unlist(sample_ids))
colnames(conversion_df) <- c('aliquot_ids', 'sample_ids')
# dd <- read_delim("Desktop/Project/data/0b3ab4ef-c43c-4184-a396-27c0c5398d85.wxs.aliquot_ensemble_masked.maf",
#               delim = "\t", escape_double = FALSE,
#               trim_ws = TRUE, skip = 7)
sam <- barcodeToUUID(substr(UUIDtoBarcode(id, from_type = "aliquot_ids")$portions.analytes.aliquots.submitter_id, 1, 16))$sample_ids
# Clean write
rm(list = ls())
library(readr)
library(dplyr)
library(TCGAutils)
df <- read_csv("Desktop/Project/temp/intermediate_mapping_file.csv")
df <- df[1:100,]
unique_aliquots <- unique(df$Tumor_Sample_UUID)
barcodes <- list()
sample_ids <- list()
for (id in unique_aliquots){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
sam <- barcodeToUUID(bar)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
barcodes <- c(barcodes, bar)
}
conversion_df <- data.frame(unlist(as.list(unique_aliquots)), unlist(sample_ids))
colnames(conversion_df) <- c('aliquot_ids', 'sample_ids')
# join the two data frames based on matching UUID and aliquot_id
result <- left_join(df, conversion_df, by = c("Tumor_Sample_UUID" = "aliquot_ids"))
View(result)
View(result)
################################################################################
# select only the UUID and sample_id columns
result <- result %>% select(Tumor_Sample_UUID, sample_ids)
df$NCBI_Build <- as.factor(df$NCBI_Build)
df <- read_csv("Desktop/Project/temp/intermediate_mapping_file.csv")
df$NCBI_Build <- as.factor(df$NCBI_Build)
# join the two data frames based on matching UUID and aliquot_id
mapfile <- left_join(df, conversion_df, by = c("Tumor_Sample_UUID" = "aliquot_ids"))
colnames(mapfile) <- c()
# join the two data frames based on matching UUID and aliquot_id
mapfile <- left_join(df, conversion_df, by = c("Tumor_Sample_UUID" = "aliquot_ids"))
colnames(mapfile)
?data()
getwd()
setwd(~/Project)
setwd(Desktop/Project)
setwd('Desktop/Project')
setwd('~/Project')
colnames(mapfile) <- c("aliquot_id", "reference_id", "case_id", "NCBI_Build",
"chromosome", "start", "end", "strand", "variant_classification",
"variant_type", "ref_allele", "tumor_allele1", "tumor_allele2",
"hgvsc", "hgvsp", "hgvsp_short", "sample_id")
mapfile <- mapfile %>% select(case_id, sample_id, aliquot_id, reference_id,
chromosome, start, end, strand, variant_classification,
variant_type, ref_allele, tumor_allele1, tumor_allele2,
hgvsc, hgvsp, hgvsp_short)
mapfile <- mapfile %>% select(case_id, sample_id, aliquot_id, reference_id,
chromosome, as.integer(start), end, strand, variant_classification,
variant_type, ref_allele, tumor_allele1, tumor_allele2,
hgvsc, hgvsp, hgvsp_short)
mapfile$start
write_tsv(mapfile, path = 'temp/mappingfile.txt')
?write_tsv
write_tsv(mapfile, 'temp/mappingfile.txt')
View(df)
View(df)
# Clean write
rm(list = ls())
library(readr)
library(dplyr)
library(TCGAutils)
df <- read_csv("Desktop/Project/temp/intermediate_mapping_file.csv")
df <- read_csv("/temp/intermediate_mapping_file.csv")
df <- read_csv("temp/intermediate_mapping_file.csv")
# Clean write
rm(list = ls())
library(readr)
library(dplyr)
library(TCGAutils)
df <- read_csv("temp/intermediate_mapping_file.csv")
unique_aliquots <- unique(df$Tumor_Sample_UUID)
barcodes <- list()
sample_ids <- list()
for (id in unique_aliquots){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
sam <- barcodeToUUID(bar)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
barcodes <- c(barcodes, bar)
}
################################################################################
# Clean write
rm(list = ls())
library(readr)
library(dplyr)
library(TCGAutils)
df <- read_csv("temp/intermediate_mapping_file.csv")
unique_aliquots <- unique(df$Tumor_Sample_UUID)
barcodes <- list()
sample_ids <- list()
for (id in unique_aliquots){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
sam <- barcodeToUUID(bar)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
barcodes <- c(barcodes, bar)
}
rm(list = ls())
library(readr)
library(dplyr)
library(TCGAutils)
df <- read_csv("temp/intermediate_mapping_file.csv")
unique_aliquots <- unique(df$Tumor_Sample_UUID)
barcodes <- list()
sample_ids <- list()
unique_aliquots[1:10]
for (id in unique_aliquots[1:10]){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
sam <- barcodeToUUID(bar)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
barcodes <- c(barcodes, bar)
}
start_time <- Sys.time()
for (id in unique_aliquots[1:10]){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
sam <- barcodeToUUID(bar)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
barcodes <- c(barcodes, bar)
}
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
for (id in unique_aliquots[1]){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
sam <- barcodeToUUID(bar)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
barcodes <- c(barcodes, bar)
}
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
for (id in unique_aliquots[1:100]){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
sam <- barcodeToUUID(bar)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
barcodes <- c(barcodes, bar)
}
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
for (id in unique_aliquots){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
bar <- substr(bar$portions.analytes.aliquots.submitter_id, 1, 16)
sam <- barcodeToUUID(bar)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
barcodes <- c(barcodes, bar)
}
barcodeToUUID(TCGA-06-6388-01A)
barcodeToUUID('TCGA-06-6388-01A')
UUIDtoBarcode('1e6b9fc4-3fed-4d32-89b8-aa15fb4a5840')
UUIDtoBarcode('1e6b9fc4-3fed-4d32-89b8-aa15fb4a5840', from_type = "sample_ids")
UUIDtoBarcode('1e6b9fc4-3fed-4d32-89b8-aa15fb4a5840', from_type = "aliquot_ids")
start_time <- Sys.time()
for (id in unique_aliquots){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
}
start_time <- Sys.time()
for (id in unique_aliquots){
bar <- UUIDtoBarcode(id, from_type = "aliquot_ids")
barcodes <- c(barcodes, bar)
}
df <- read_csv("temp/intermediate_mapping_file.csv")
df['Tumor_Sample_Barcode'] <- subtr(df['Tumor_Sample_Barcode'], 1, 16)
df['Tumor_Sample_Barcode'] <- substr(df['Tumor_Sample_Barcode'], 1, 16)
# unique_aliquots <- unique(df$Tumor_Sample_UUID)
df['Tumor_Sample_Barcode'] <- substr(df['Tumor_Sample_Barcode'], 1, 15)
################################################################################
# Clean write
rm(list = ls())
library(readr)
library(dplyr)
library(TCGAutils)
df <- read_csv("temp/intermediate_mapping_file.csv")
######## Test
df <- df[1:10]
df <- read_csv("temp/intermediate_mapping_file.csv")
######## Test
df <- df[, 1:10]
df <- read_csv("temp/intermediate_mapping_file.csv")
######## Test
df <- df[1:10, ]
sample_barcodes <- df['Tumor_Sample_Barcode']
sample_ids <- list()
for (id in sample_barcodes){
sam <- barcodeToUUID(id)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
}
df <- read_csv("temp/intermediate_mapping_file.csv")
sample_barcodes <- df['Tumor_Sample_Barcode']
sample_ids <- list()
sample_barcodes <- unique(df['Tumor_Sample_Barcode'])
start_time <- Sys.time()
for (id in sample_barcodes[1:10]){
sam <- barcodeToUUID(id)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
}
start_time <- Sys.time()
for (id in sample_barcodes[1:10,]){
sam <- barcodeToUUID(id)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
}
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
for (id in sample_barcodes){
sam <- barcodeToUUID(id)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
}
end_time <- Sys.time()
end_time - start_time
View(df)
View(df)
# dd <- read_delim("Desktop/Project/data/0b3ab4ef-c43c-4184-a396-27c0c5398d85.wxs.aliquot_ensemble_masked.maf",
#               delim = "\t", escape_double = FALSE,
#               trim_ws = TRUE, skip = 7)
################################################################################
# Clean write
rm(list = ls())
library(readr)
library(dplyr)
library(TCGAutils)
df <- read_csv("temp/intermediate_mapping_file.csv")
sample_barcodes <- unique(df['Tumor_Sample_Barcode'])
sample_ids <- list()
start_time <- Sys.time()
for (id in sample_barcodes){
sam <- barcodeToUUID(id)
sam <- sam$sample_ids
sample_ids <- c(sample_ids, sam)
}
end_time <- Sys.time()
end_time - start_time
conversion_df <- data.frame(unlist(as.list(unique_aliquots)), unlist(sample_ids))
conversion_df <- data.frame(unlist(as.list(sample_barcodes)), unlist(sample_ids))
colnames(conversion_df) <- c('sample_barcode', 'sample_ids')
# join the two data frames based on matching UUID and aliquot_id
mapfile <- left_join(df, conversion_df, by = c("Tumor_Sample_Barcode" = "sample_barcode"))
colnames(mapfile) <- c("aliquot_id", "reference_id", "case_id", "NCBI_Build",
"chromosome", "start", "end", "strand", "variant_classification",
"variant_type", "reference_bases", "alternate_bases_1", "alternate_bases_2",
"hgvsc", "hgvsp", "hgvsp_short", "sample_barcode", "biosample_id")
mapfile <- mapfile %>% select(case_id, biosample_id, aliquot_id, reference_id,
chromosome, start, end, strand, variant_classification,
variant_type, reference_bases, alternate_bases_1, alternate_bases_2,
hgvsc, hgvsp, hgvsp_short)
write_tsv(mapfile, 'temp/mappingfile.tsv')
